@model SockMarket.Models.Deal

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Deal</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.ID)

        <div class="form-group">
            @Html.LabelFor(model => model.Stage, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EnumDropDownListFor(model => model.Stage, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Stage, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    <h5>Leave a Comment:</h5>
    <div>
        <textarea id="comment-input" rows="3" style="margin-top: 0px; margin-bottom: 0px; height: 115px;"></textarea>
    </div>
    <button id="post-button" class="btn btn-primary" data-url="@Url.Action("AddComment", "Deal",new {id=Model.ID})">Post</button>
</div>

<div id="comments">
    @foreach (var item in Model.Comments.Reverse())
    {
        <div class="panel panel-default">
            <div class="panel-heading">@Html.DisplayFor(modelItem => item.Author) commented @Html.DisplayFor(modelItem => item.Time)</div>
            <div class="panel-body" style="white-space: pre-line">@Html.DisplayFor(modelItem => item.Text)</div>
        </div>
    }
</div>

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/Scripts/post-comment.js")
}
